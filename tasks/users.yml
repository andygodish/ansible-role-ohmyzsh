---
- name: '[users] Copy default zshrc to user home directory'
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ ohmyzsh_root_dir if item.user == 'root' else ohmyzsh_home_dir ~ item.user }}/.zshrc"
    mode: 0644
    owner: "{{ item.user }}"
    group: "{{ item.user if 'Darwin' not in ansible_os_family else 'wheel' if item.user == 'root' else 'staff' }}"
  when: "item.state is not defined or 'present'in item.state"
  loop: "{{ ohmyzsh_users|flatten(levels=1) }}"
  become: true

- name: '[users] Create directory structure'
  ansible.builtin.file:
    path: "{{ ohmyzsh_root_dir if item.user == 'root' else ohmyzsh_home_dir ~ item.user }}/.zsh"
    state: directory
    recurse: true
    owner: "{{ item.user }}"
    group: "{{ item.user if 'Darwin' not in ansible_os_family else 'wheel' if item.user == 'root' else 'staff' }}"
  when: "item.state is not defined or 'present'in item.state"
  loop: "{{ ohmyzsh_users|flatten(levels=1) }}"
  become: true

- name: '[users] Generate default aliases'
  ansible.builtin.template:
    src: zsh/aliases.j2
    dest: "{{ ohmyzsh_root_dir if item.user == 'root' else ohmyzsh_home_dir ~ item.user }}/.zsh/aliases"
    mode: 0644
    owner: "{{ item.user }}"
    group: "{{ item.user if 'Darwin' not in ansible_os_family else 'wheel' if item.user == 'root' else 'staff' }}"
  when: "item.state is not defined or 'present'in item.state"
  loop: "{{ ohmyzsh_users|flatten(levels=1) }}"
  become: true

- name: '[users] Generate custom aliases'
  ansible.builtin.template:
    src: zsh/aliases.local.j2
    dest: "{{ ohmyzsh_root_dir if item.user == 'root' else ohmyzsh_home_dir ~ item.user }}/.zsh/aliases.local"
    mode: 0644
    owner: "{{ item.user }}"
    group: "{{ item.user if 'Darwin' not in ansible_os_family else 'wheel' if item.user == 'root' else 'staff' }}"
  when: "item.state is not defined or 'present'in item.state"
  loop: "{{ ohmyzsh_users|flatten(levels=1) }}"
  become: true

# Post setup
- name: '[users] Set zsh as default shell'
  ansible.builtin.user: name={{ item.user }} shell=/bin/zsh
  when: "item.state is not defined or 'present'in item.state"
  loop: "{{ ohmyzsh_users|flatten(levels=1) }}"
  become: true

- name: '[users] Set bash as default shell for uninstalled users'
  ansible.builtin.user: name={{ item.user }} shell=/bin/bash
  when:
    - item.state is defined
    - "'absent' in item.state"
  loop: "{{ ohmyzsh_users|flatten(levels=1) }}"
  become: true
